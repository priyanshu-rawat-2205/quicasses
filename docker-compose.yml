# version: '3.8'

# services:
#   flask-backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     ports:
#       - "5000:5000"
#     environment:
#       - FLASK_APP=wsgi.py
#       - FLASK_ENV=production
#       - API_KEY=${API_KEY}
#       - DB_USERNAME=${DB_USERNAME}
#       - DB_PASSWORD=${DB_PASSWORD}
#       - DB_HOST=db
#       - DB_PORT=3306
#       - DB_NAME=${DB_NAME}
#       - JWT_SECRET_KEY=${JWT_SECRET_KEY}
#     depends_on:
#       - db
#       - redis

#   nextjs-frontend:
#     build:
#       context: ./frontend
#       dockerfile: Dockerfile
#     ports:
#       - "3000:3000"

#   db:
#     image: mysql:8.0
#     environment:
#       MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
#       MYSQL_DATABASE: ${DB_NAME}
#       MYSQL_USER: ${DB_USERNAME}
#       MYSQL_PASSWORD: ${DB_PASSWORD}
#     ports:
#       - "3306:3306"
#     volumes:
#       - db_data:/var/lib/mysql

#   redis:
#     image: redis:6.2
#     ports:
#       - "6380:6379"

# volumes:
#   db_data:



























version: '3.8'

services:
  flask-backend:
    container_name: flask-backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - FLASK_APP=wsgi.py
      - FLASK_ENV=production
      - API_KEY=${API_KEY}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_started
      migrate:
        condition: service_completed_successfully
    volumes:
      - backend_data:/app
    ports:
      - "5000:5000"

  nextjs-frontend:
    container_name: nextjs-frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL}
    depends_on:
      - flask-backend
      
  mysql:
    image: mysql:8.0
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    ports:
      - "3307:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 20s
      retries: 50
      start_period: 20s

  redis:
    image: redis:6.2
    container_name: redis
    ports:
      - "6380:6379"

  migrate:
    container_name: migrate
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - API_KEY=${API_KEY}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
    command: ["flask", "db", "upgrade"]
    restart: on-failure

volumes:
  mysql_data:
  backend_data:
